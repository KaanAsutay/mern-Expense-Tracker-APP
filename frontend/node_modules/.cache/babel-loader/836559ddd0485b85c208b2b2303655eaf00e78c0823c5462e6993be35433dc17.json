{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Business\\\\Back-End\\\\PROJECTS\\\\mern-Expense-Tracker-APP\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [income, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  //calculate incomes\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncome();\n  };\n  const getIncome = async () => {\n    const response = await axios.get(`${BASE_URL}get-income`);\n    setIncome(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate incomes\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}add-expense`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncome,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"ZO7RbBIx4xV8P0bAnjIl6606wbY=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","income","setIncomes","expenses","setExpenses","error","setError","addIncome","response","post","catch","err","data","message","getIncome","get","setIncome","console","log","deleteIncome","id","res","delete","getIncomes","totalIncome","incomes","forEach","amount","addExpense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/USER/Desktop/Business/Back-End/PROJECTS/mern-Expense-Tracker-APP/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [income, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    //calculate incomes\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getIncome()\r\n    }\r\n\r\n    const getIncome = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-income`)\r\n        setIncome(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes()\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    //calculate incomes\r\n    const addExpense = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getExpenses()\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expenses`)\r\n        setExpenses(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n        getExpenses()\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalIncome = 0;\r\n        expenses.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncome,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () =>{\r\n    return useContext(GlobalContext)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}